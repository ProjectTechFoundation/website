---
import FormInput from '../ui/FormInput.astro';
import FormTextarea from '../ui/FormTextarea.astro';

const volunteerOpportunities = [
  "Technical Support Volunteer",
  "Social Media Volunteer"
];
---

<section class="py-20 bg-white">
  <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center">
      <h1 class="text-4xl font-extrabold text-gray-900 sm:text-5xl">Volunteer With Us</h1>
      <p class="mt-4 text-xl text-gray-600">Join our mission to bridge the digital divide</p>
    </div>

    <form 
      action="https://docs.google.com/forms/d/e/1FAIpQLSchh3eSc5XOMrkMqACAO6kVCJsc8jqv5boEnnAikInMFwdX2Q/formResponse"
      method="POST"
      class="mt-12 space-y-8"
      id="volunteer-form"
      novalidate
    >
      <!-- First and Last Name -->
      <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
        <FormInput
          id="firstName"
          name="entry.2005620554"
          type="text"
          label="First Name"
          required
        />
        <FormInput
          id="lastName"
          name="entry.1613019958"
          type="text"
          label="Last Name"
          required
        />
      </div>

      <!-- Email -->
      <FormInput
        id="email"
        name="entry.1045781291"
        type="email"
        label="Email Address"
        required
      />

      <!-- Phone -->
      <FormInput
        id="phone"
        name="entry.1166974658"
        type="tel"
        label="Phone Number"
        required
      />

      <!-- Area of Interest -->
      <div class="relative">
        <select 
          id="opportunity"
          name="entry.1768226022"
          required
          class="block px-2.5 pb-2.5 pt-4 w-full text-gray-900 bg-transparent rounded-lg border border-gray-300 appearance-none focus:outline-none focus:ring-0 peer"
        >
          <option value="" disabled selected>Select an opportunity</option>
          {volunteerOpportunities.map(opportunity => (
            <option value={opportunity}>{opportunity}</option>
          ))}
        </select>
        <label 
          for="opportunity"
          class="absolute text-gray-500 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-white px-2 
                 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 
                 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:-translate-y-4 
                 peer-focus:scale-75 peer-focus:text-blue-600 left-1"
        >
          Area of Volunteer Interest
        </label>
      </div>

      <!-- Relevant Experience -->
      <FormTextarea
        id="experience"
        name="entry.1783335816"
        label="Relevant Experience"
        required
      />

      <!-- Availability -->
      <div class="relative">
        <select 
          id="availability"
          name="entry.1785650452"
          required
          class="block px-2.5 pb-2.5 pt-4 w-full text-gray-900 bg-transparent rounded-lg border border-gray-300 appearance-none focus:outline-none focus:ring-0 peer"
        >
          <option value="" disabled selected>Choose availability</option>
          <option value="Weekdays">Weekdays</option>
          <option value="Weekends">Weekends</option>
          <option value="Flexible">Flexible</option>
        </select>
        <label 
          for="availability"
          class="absolute text-gray-500 duration-300 transform -translate-y-4 scale-75 top-2 z-10 origin-[0] bg-white px-2 
                 peer-placeholder-shown:scale-100 peer-placeholder-shown:-translate-y-1/2 
                 peer-placeholder-shown:top-1/2 peer-focus:top-2 peer-focus:-translate-y-4 
                 peer-focus:scale-75 peer-focus:text-blue-600 left-1"
        >
          Availability
        </label>
      </div>

      <!-- Skills you bring to the Role -->
      <FormTextarea
        id="experience"
        name="entry.1493113591"
        label="Skills You Bring to the Role"
        required
      />

      <!-- Submit Button -->
      <div class="text-center">
        <button 
          type="submit"
          class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md 
                 text-white bg-primary hover:bg-secondary focus:outline-none focus:ring-2 
                 focus:ring-offset-2 focus:ring-primary"
        >
          Submit Application
        </button>
      </div>

      <!-- Error Message (below submit) -->
      <div id="error-message" class="hidden mt-6">
        <div class="flex items-center justify-center text-red-600 bg-red-50 p-4 rounded-md">
          <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path 
              stroke-linecap="round" 
              stroke-linejoin="round" 
              stroke-width="2" 
              d="M6 18L18 6M6 6l12 12"
            ></path>
          </svg>
          <span><strong>Error:</strong> Please fill out all required fields before submitting.</span>
        </div>
      </div>

      <!-- Success Message (below submit) -->
      <div id="success-message" class="hidden mt-6">
        <div class="flex items-center justify-center text-green-600 bg-green-50 p-4 rounded-md">
          <svg class="w-6 h-6 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path 
              stroke-linecap="round" 
              stroke-linejoin="round" 
              stroke-width="2" 
              d="M5 13l4 4L19 7"
            ></path>
          </svg>
          <span>Thank you! Your response has been submitted successfully.</span>
        </div>
      </div>
    </form>
  </div>

  <!-- Inline Script to handle submission, phone formatting, email/phone validation -->
  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('volunteer-form');
      const errorMessage = document.getElementById('error-message');
      const successMessage = document.getElementById('success-message');

      const phoneInput = document.getElementById('phone');
      const emailInput = document.getElementById('email');

      // Format phone as ___-___-____
      function formatPhoneNumber(value) {
        if (!value) return value;
        const digits = value.replace(/[^\d]/g, '');
        const length = digits.length;
        if (length < 4) return digits;
        if (length < 7) return digits.slice(0,3) + '-' + digits.slice(3);
        return digits.slice(0,3) + '-' + digits.slice(3,6) + '-' + digits.slice(6,10);
      }

      phoneInput.addEventListener('input', (e) => {
        e.target.value = formatPhoneNumber(e.target.value);
      });

      // Simple regex checks
      function isValidEmail(email) {
        return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
      }
      function isValidPhone(phone) {
        return /^\d{3}-\d{3}-\d{4}$/.test(phone);
      }

      form.addEventListener('submit', async (e) => {
        e.preventDefault();

        // Validate all required fields
        let allValid = true;
        form.querySelectorAll('input, select, textarea').forEach(field => {
          if (field.required && !field.value.trim()) {
            allValid = false;
          }
        });

        // Additional checks for email & phone format
        if (!isValidEmail(emailInput.value)) {
          allValid = false;
        }
        if (!isValidPhone(phoneInput.value)) {
          allValid = false;
        }

        if (!allValid) {
          // Show error, hide success
          errorMessage.classList.remove('hidden');
          successMessage.classList.add('hidden');
          return;
        }

        // Hide error
        errorMessage.classList.add('hidden');

        // Prepare form data
        const formData = new FormData(form);
        try {
          // Submit to Google Forms (no forced redirect)
          await fetch(form.action, {
            method: 'POST',
            mode: 'no-cors',
            body: formData
          });

          // Show success message
          successMessage.classList.remove('hidden');
          form.reset();

          // Hide success after 5 seconds
          setTimeout(() => {
            successMessage.classList.add('hidden');
          }, 5000);
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while submitting the form. Please try again.');
        }
      });
    });
  </script>
</section>
